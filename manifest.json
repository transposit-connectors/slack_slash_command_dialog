{
  "v2": {
    "transposit": {
      "dependencies": [{
        "name": "transposit/slack:v1.*.*",
        "alias": "slack"
      }, {
        "name": "transposit/slack:v1.*.*",
        "alias": "slackbot"
      }, {
        "name": "transposit/airtable:v2.*.*",
        "alias": "airtable"
      }],
      "operations": [{
        "id": "confirm_ticket",
        "description": "Sends the confirmation as a PM to the user",
        "tql": {
          "parameters": [{
            "name": "channel",
            "type": "STRING"
          }, {
            "name": "email",
            "type": "STRING"
          }, {
            "name": "title",
            "type": "STRING"
          }, {
            "name": "description",
            "type": "STRING"
          }, {
            "name": "urgency",
            "type": "STRING"
          }, {
            "name": "url",
            "type": "STRING"
          }],
          "tql": "SELECT * FROM slackbot.post_chat_message\n  WHERE $body=(SELECT {\n    'channel': @channel,\n    'as_user': true,\n    'text': 'Helpdesk ticket created!',\n    'attachments': [\n      {\n        'title': @email,\n        -- Get this from the 3rd party helpdesk system\n        'title_link': @url,\n        'fields': [\n          {\n            'title': 'Title',\n            'value': @title,\n          },\n          {\n            'title': 'Description',\n            'value': @description,\n          },\n          {\n            'title': 'Status',\n            'value': 'Open',\n            'short': true,\n          },\n          {\n            'title': 'Urgency',\n            'value': @urgency,\n            'short': true,\n          },\n        ],\n      },\n    ]\n  })\n"
        }
      }, {
        "id": "open_helpdesk",
        "description": "Activates when /helpdesk is called in Slack",
        "function": {
          "parameters": [{
            "name": "http_event",
            "default": {
              "text": "{\"http_method\": \"GET\", \"query_parameters\": {}, \"headers\": {}, \"body\": \"\"}"
            },
            "type": "OBJECT"
          }],
          "js": "webhook.js"
        },
        "access": {
          "requireApiKey": true,
          "webhook": true
        }
      }, {
        "id": "open_dialog",
        "description": "Opens the helpdesk dialog",
        "tql": {
          "parameters": [{
            "name": "text",
            "type": "STRING"
          }, {
            "name": "trigger_id",
            "type": "STRING"
          }],
          "tql": "SELECT * FROM slackbot.open_dialog\n  WHERE $body=(SELECT {\n    'dialog' : {\n      'title': 'Submit a helpdesk ticket',\n      'callback_id': 'submit-ticket',\n      'submit_label': 'Submit',\n      'elements': [\n        {\n          'label': 'Title',\n          'type': 'text',\n          'name': 'title',\n          'value': @text,\n          'hint': '30 second summary of the problem',\n        },\n        {\n          'label': 'Description',\n          'type': 'textarea',\n          'name': 'description',\n          'optional': true,\n        },\n        {\n          'label': 'Urgency',\n          'type': 'select',\n          'name': 'urgency',\n          'options': [\n            { 'label': 'Low', 'value': 'Low' },\n            { 'label': 'Medium', 'value': 'Medium' },\n            { 'label': 'High', 'value': 'High' },\n          ],\n        },\n      ]\n    },\n    'trigger_id' : @trigger_id\n  })\n  "
        }
      }, {
        "id": "ticket_received",
        "description": "Activates when the ticket is submitted",
        "function": {
          "parameters": [{
            "name": "http_event",
            "default": {
              "text": "{\"http_method\": \"GET\", \"query_parameters\": {}, \"headers\": {}, \"body\": \"\"}"
            },
            "type": "OBJECT"
          }],
          "js": "ticket_recieved.js"
        },
        "access": {
          "requireApiKey": true,
          "webhook": true
        }
      }, {
        "id": "create_record",
        "description": "Creates the ticket in airtable",
        "tql": {
          "parameters": [{
            "name": "id",
            "type": "STRING"
          }, {
            "name": "email",
            "type": "STRING"
          }, {
            "name": "title",
            "type": "STRING"
          }, {
            "name": "description",
            "type": "STRING"
          }, {
            "name": "urgency",
            "type": "STRING"
          }, {
            "name": "baseId",
            "type": "STRING"
          }],
          "tql": "SELECT * FROM airtable.create_record\n  WHERE baseId=@baseId\t\t-- Be sure to set this to your Airtable BaseId in environment variables\n  AND table='Tickets'\n  AND $body=(SELECT {\n    'fields' : {'userId': @id,\n             \t'userEmail': @email,\n             \t'title': @title,\n             \t'description': @description,\n             \t'urgency': @urgency\n               },\n  })\n"
        }
      }, {
        "id": "get_email",
        "description": "Returns a user's slack email",
        "tql": {
          "parameters": [{
            "name": "user",
            "type": "STRING"
          }],
          "tql": "SELECT user.profile.email FROM slack.get_users_info\n  WHERE user=@user\n"
        }
      }],
      "dataConnections": [{
        "ref": "slackbot.raw",
        "overrides": {
          "swagger": {
            "oauthConfig": {
              "scope": "bot,commands,chat:write:bot",
              "accessTokenPath": "bot.bot_access_token"
            },
            "executionLimits": {
            }
          }
        }
      }, {
        "ref": "slack.raw",
        "overrides": {
          "swagger": {
            "oauthConfig": {
              "scope": "users:read,users:read.email"
            },
            "executionLimits": {
            }
          }
        }
      }],
      "javascriptAPIVersion": "3",
      "source": "src",
      "userSettingsDisplay": "GENERATED",
      "appSettings": [{
        "name": "baseId",
        "description": "The Airtable base ID. This can be found as part of the API documentation URL. Go to https://airtable.com/api and select the base you're interested in, then find the base ID in the resulting URL: https://airtable.com/[baseId]/api/docs.",
        "type": "STRING"
      }, {
        "name": "url",
        "description": "The url that directs to your ticket",
        "type": "STRING",
        "default": "https://example.com/ticket"
      }]
    }
  }
}